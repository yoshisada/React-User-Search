{"version":3,"sources":["component/UserDisplay.js","App.js","index.js"],"names":["UserDisplay","filteredData","this","props","TableContainer","style","margin","Box","border","borderRadius","borderColor","m","mt","bgcolor","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","result","component","scope","name","email","phone","address","city","padding","Tooltip","title","IconButton","onClick","deleteUser","id","React","Component","App","useState","searchVal","setSearchValue","setFilteredData","userList","setUserList","loading","setLoading","sortBy","setSortBy","a","axios","get","then","json","data","useEffect","getUsers","catch","filter","user","toLowerCase","includes","sort","b","width","Grid","className","container","direction","alignItems","item","xs","justify","variant","placeholder","onChange","newValue","onCancelSearch","NativeSelect","value","event","target","newUserList","i","length","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1adc90d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Box, IconButton, TableHead, Tooltip, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\r\n\r\n\r\nexport default class UserDisplay extends React.Component {\r\n  render() {\r\n    const {filteredData} = this.props;\r\n    return (\r\n      <TableContainer style={{margin: 'auto'}}>\r\n        <Box border={1} borderRadius={16} borderColor=\"grey.300\"  \r\n          m=\"auto\" mt = {2} bgcolor=\"white\">\r\n        <Table aria-label=\"simple table\" >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"left\">Email</TableCell>\r\n              <TableCell align=\"left\">Phone</TableCell>\r\n              <TableCell align=\"left\">City</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredData.map((result) => (\r\n              <TableRow key={result.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {result.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{result.email}</TableCell>\r\n                <TableCell align=\"left\">{result.phone}</TableCell>\r\n                <TableCell align=\"left\">{result.address.city}</TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"Delete\" onClick={() => this.props.deleteUser(result.id)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        </Box>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport UserDisplay from './component/UserDisplay';\r\nimport SearchBar from 'material-ui-search-bar';\r\nimport axios from 'axios';\r\nimport { Box, Grid, NativeSelect } from '@material-ui/core';\r\n\r\nfunction App() {\r\n\r\n  const [searchVal, setSearchValue] = useState(''); // holds current input in the search bar\r\n  const [filteredData, setFilteredData] = useState([]); //holds the list of users that hold the substring in the search value\r\n  const [userList, setUserList] = useState([]); //holds all the users\r\n  const [loading, setLoading] = useState(false);\r\n  const [sortBy, setSortBy] = useState('id');\r\n\r\n  async function getUsers() {\r\n    return axios.get(\"https://jsonplaceholder.typicode.com/users\").then(json => (json.data));\r\n  }\r\n//deletes user based on id\r\nfunction deleteUser(id) {\r\n    const newUserList= [...userList];\r\n    // Find and delete specified task\r\n    for (let i = 0; i < newUserList.length; i++) {\r\n        if (newUserList[i].id === id) {\r\n            newUserList.splice(i, 1);\r\n        }\r\n    }\r\n    setUserList(newUserList);\r\n  }\r\n\r\n  //this useEffect only runs once when rendered since the array does not include any variables\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUsers()\r\n      .then(result => {\r\n        setUserList(result); \r\n        setLoading(false);})\r\n      .catch(() => []);\r\n    }, []);\r\n\r\n\r\n    //this useEffect runs any time searchVal or userList is updated\r\n    useEffect(() => {\r\n      setFilteredData(\r\n        userList.filter(\r\n          (user) =>\r\n          user.name.toLowerCase().includes(searchVal.toLowerCase()) ||\r\n          user.address.city.toLowerCase().includes(searchVal.toLowerCase())\r\n        )\r\n      );\r\n     }, [searchVal, userList]);\r\n\r\n  /*\r\n    Filters according to the the search value. \r\n    Display all users with the name and/or city that possess the substring in the search bar\r\n\r\n    runs ONCE after initial rendering\r\n    and after every rendering ONLY IF 'prop' or 'state' changes\r\n  */\r\n\r\n function clearSearch() {\r\n   setSearchValue('');\r\n }\r\n function handleChange(event) {\r\n  setSortBy(event.target.value);\r\n }\r\n\r\n if (sortBy !== \"city\") filteredData.sort((a,b) => a[sortBy] > b[sortBy] ? 1 : -1)\r\n else filteredData.sort((a,b) => a[\"address\"][sortBy] > b[\"address\"][sortBy] ? 1 : -1)\r\n\r\n if (loading) {\r\n   return <p> Loading Users...</p>;\r\n }\r\n// if you set state in the body of the component (or in render) youâ€™ll have an infinite loop.\r\n  return (\r\n    <Box width = {4/5} m=\"auto\" mt = {5}>\r\n    <Grid className=\"App\" width = {4/5}>\r\n      <Grid container direction=\"row\" alignItems=\"center\">\r\n      <Grid item xs={9}>\r\n      <SearchBar border={1} justify=\"left\" width = {3/5}\r\n          variant=\"filled\"\r\n          placeholder=\"Search by Name or City\"\r\n          onChange={(newValue) => setSearchValue(newValue)}\r\n          onCancelSearch={clearSearch}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <Box>\r\n          <label className=\"sortText\">Sort By: </label>\r\n          <NativeSelect justify=\"right\"  value={sortBy} onChange={handleChange}> \r\n            <option value=\"id\">Default</option>\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"city\">City</option>\r\n          </NativeSelect>\r\n          </Box>\r\n          </Grid>\r\n          </Grid>\r\n      <UserDisplay filteredData = {filteredData} deleteUser = {deleteUser}/> \r\n    </Grid>\r\n    </Box>\r\n  );\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}